类 战斗执行器
	/*
	胜负判断标准:
	1、一方全员死亡
	2、一方全员失去行动力，且对方可行动人数大于等于一方人数
	*/
	变量 阵营A : 角色容器
	变量 阵营B : 角色容器
	变量 计数 : 整数
	变量 胜负已分 : 逻辑型
	变量 行动阵营 : 逻辑型
	变量 模式 : 整数
	变量 动作 : 动作回调
	变量 行动角色 : 整数
	方法 初始化(a : 角色容器,b : 角色容器,是否先手 : 逻辑型 = 真)
		阵营A = a
		阵营B = b
		计数 = 1
		胜负已分 = 假
		行动阵营 = 是否先手
		订阅事件()
		加载完毕()
		新回合()
	结束 方法
	
	事件 动作 : 提交动作(动作类型 : 整数,目标 : 角色)
		
	结束 事件
	
	事件 动作 : 执行完毕()
		
	结束 事件
	
	方法 新回合()
		如果 胜负已分 则
		否则
			tick()
			自增(计数)
		结束 如果
	结束 方法
	
	方法 tick()
		如果 行动阵营 则
			如果(取反(阵营A.读取完毕()))
				要求角色执行动作(真,阵营A.下一个())
			否则(取反(阵营B.读取完毕()))
				要求角色执行动作(真,阵营B.下一个())
			结束 如果
		否则
			如果(取反(阵营B.读取完毕()))
				要求角色执行动作(真,阵营B.下一个())
			否则(取反(阵营A.读取完毕()))
				要求角色执行动作(真,阵营A.下一个())
			结束 如果
		否则
			新回合()
		结束 如果
	结束 方法
	
	方法 要求角色执行动作(阵营 : 逻辑型,目标 : 角色)
		行动角色 = 目标.id
		目标.执行动作(取战斗执行器(),阵营,动作)
	结束 方法
	
	方法 胜负判断()
		
	结束 方法
	
	方法 阵营查询(目标 : 角色) : 逻辑型
		返回 阵营A.是否存在(目标.id)
	结束 方法
	
	方法 角色离场(目标 : 角色)
	
	结束 方法
	
	方法 取战斗执行器() : 战斗执行器
		返回 本对象
	结束 方法
	
	定义事件 回合开始(回合数 : 整数)
	定义事件 回合结束(回合数 : 整数)
	定义事件 执行动作(玩家阵营 : 逻辑型,目标 : 角色)
	定义事件 加载完毕()
	定义事件 战斗结束(类型 : 整数)
结束 类

类 队伍
	变量 容器 : 角色容器
	
结束 类

类 战斗结束类型
	常量 胜利_全员死亡 : 整数 = 0
	常量 胜利_全员受控 : 整数 = 1
	常量 敌方逃跑 : 整数 = 2
	常量 我方逃跑 : 整数 = 3
	常量 失败_全员死亡 : 整数 = 4
	常量 失败_全员受控 : 整数 = 5
结束 类

类 单击模式
	常量 默认模式 : 整数 = 10
	常量 选取模式 : 整数 = 11
结束 类

类 动作回调
	定义事件 提交动作(动作类型 : 整数,目标 : 角色)
	定义事件 执行完毕()
结束 类

@静态
类 动作文本
	常量 跳过 : 整数 = 0
	常量 攻击 : 整数 = 1
	常量 防御 : 整数 = 2
	常量 治疗 : 整数 = 3
	常量 逃跑 : 整数 = 4
结束 类