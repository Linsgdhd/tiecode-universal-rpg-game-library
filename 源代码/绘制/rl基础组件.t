类 ui组件
	变量 组件名 : 文本
	变量 父组件 : rl组件容器?
	@隐藏
	变量 就绪 : 逻辑型 = 假

	变量 旋转角度 : 单精度小数 = 0.0f

	变量 图形 : rl图形
	
	变量 高度 : 单精度小数 = 0.0f
	变量 宽度 : 单精度小数 = 0.0f
	
	变量 对齐父组件底部 : 逻辑型 = 假
	变量 对齐父组件顶部 : 逻辑型 = 假
	变量 对齐父组件左边 : 逻辑型 = 假
	变量 对齐父组件右边 : 逻辑型 = 假
	变量 对齐父组件中心 : 逻辑型 = 假

	变量 边框宽度 : 单精度小数 = 0.0f

	变量 外边距 : 单精度小数 = 0.0f
	变量 内边距 : 单精度小数 = 0.0f
	变量 左内边距 : 单精度小数 = 0.0f
	变量 右内边距 : 单精度小数 = 0.0f
	变量 上内边距 : 单精度小数 = 0.0f
	变量 下内边距 : 单精度小数 = 0.0f
	变量 左外边距 : 单精度小数 = 0.0f
	变量 右外边距 : 单精度小数 = 0.0f
	变量 上外边距 : 单精度小数 = 0.0f	
	变量 下外边距 : 单精度小数 = 0.0f

	变量 前景色 : 整数 = 0xee000000
	变量 背景色 : 整数 = 0x00000000
	变量 边框色 : 整数 = 0x00000000

	变量 透明度 : 整数

	变量 可视 : 逻辑型 = 真

	变量 背景图片 : 可绘制对象?
	
	@虚拟事件
	方法 预加载()
	结束 方法

	@虚拟事件
	方法 创建完毕()
	结束 方法

	@虚拟事件
	方法 被触摸(动作 : 触摸动作,位置 : rl坐标,触摸点 : 整数)
	结束 方法

	@虚拟事件
	方法 绘制(canvas : 画布)
	结束 方法

	@虚拟事件
	方法 被销毁()
	结束 方法

	方法 取中心点() : rl坐标
		返回 图形.取中心点()
	结束 方法

	方法 数据更新()
		如果 父组件 == 空 且 取反(就绪) 则
			返回
		结束 如果
		变量 合并左边距 : 单精度小数 = 外边距 + 左外边距 + 父组件.内边距 + 父组件.左内边距
		如果 对齐父组件中心 则
			图形.原点 = 父组件.取中心点()
		结束 如果
		如果 对齐父组件左边 则
			图形.原点.x = + 数学.abs_float(图形.Xmin) + 合并左边距
		结束 如果
		变量 边距修正 : rl坐标
		如果 旋转角度 == 0.0f 则
		否则
			图形.旋转(旋转角度)
			旋转角度 = 0.0f
		结束 如果
	结束 方法

	属性读 可用() : 逻辑型
		返回 就绪
	结束 属性

	属性写 可用(value : 逻辑型)
		就绪 = value
	结束 属性
	
	属性读 宽度() : 单精度小数
		返回 宽度
	结束 属性
	
	属性读 高度() : 单精度小数
		返回 高度
	结束 属性

	属性读 与父组件底部对齐() : 逻辑型
		返回 对齐父组件底部
	结束 属性

	属性写 与父组件底部对齐(value : 逻辑型)
		对齐父组件底部 = value
	结束 属性

	属性读 与父组件顶部对齐() : 逻辑型
		返回 对齐父组件顶部
	结束 属性

	属性写 与父组件顶部对齐(value : 逻辑型)
		对齐父组件顶部 = value
	结束 属性

	属性读 与父组件左边对齐() : 逻辑型
		返回 对齐父组件左边
	结束 属性

	属性写 与父组件左边对齐(value : 逻辑型)
		对齐父组件左边 = value
	结束 属性

	属性读 与父组件右边对齐() : 逻辑型
		返回 对齐父组件右边
	结束 属性

	属性写 与父组件右边对齐(value : 逻辑型)
		对齐父组件右边 = value
	结束 属性
结束 类

类 rl矩形组件 : ui组件
	
	属性读 宽度() : 单精度小数
		返回 宽度
	结束 属性

	属性写 宽度(width : 单精度小数)
		如果 width < 0 则
			宽度 = 父组件.宽度
		否则
			宽度 = width
		结束 如果
	结束 属性

	属性读 高度() : 单精度小数
		返回 高度
	结束 属性

	属性写 高度(height : 单精度小数)
		如果 height < 0 则
			高度 = 父组件.高度
		否则
			高度 = height
		结束 如果
	结束 属性
	
	事件 rl矩形组件 : 预加载()
		变量 左上角 : rl坐标
		变量 右上角 : rl坐标
		变量 左下角 : rl坐标
		变量 右下角 : rl坐标
		左上角.set(0 - 宽度 / 2,0 - 高度 / 2)
		右上角.set(宽度 / 2,0 - 高度 / 2)
		右下角.set(宽度 / 2,高度 / 2)
		左下角.set(0 - 宽度 / 2,高度 / 2)
		变量 容器 : 坐标容器
		容器.添加坐标(左上角)
		容器.添加坐标(右上角)
		容器.添加坐标(右下角)
		容器.添加坐标(左下角)
		图形.定义(容器)
		调试输出("预加载完成")
	结束 事件
结束 类

类 rl多边形组件 : ui组件
	
	属性读 宽度() : 单精度小数
		返回 宽度
	结束 属性

	属性读 高度() : 单精度小数
		返回 高度
	结束 属性
	
	事件 rl多边形组件 : 绘制(canvas : 画布)
		变量 组件画笔 : 画笔
		组件画笔.设置颜色(背景色)
		组件画笔.设置画笔宽度(边框宽度)
		图形.绘制图形(canvas,组件画笔)
	结束 事件
结束 类

类 rl组件容器 : rl矩形组件
	变量 容器 : 集合
	变量 根容器 : 逻辑型
	方法 添加组件(组件 : ui组件)
		容器.添加成员(组件)
		组件.父组件 = 本对象
		组件.预加载()
		组件.可用 = 真
		组件.创建完毕()
	结束 方法
	方法 移除组件(组件 : ui组件)
		组件.被销毁()
		容器.删除成员2(组件)
	结束 方法
	方法 清空组件()
		循环(i, 0, 容器.长度)
			变量 temp : ui组件 = 容器.取成员(i)
			temp.被销毁()
		结束 循环
		容器.清空()
	结束 方法
	方法 取组件(索引 : 整数) : ui组件
		变量 temp : ui组件 = 容器.取成员(索引)
		返回 temp
	结束 方法
	方法 取子组件数量() : 整数
		返回 容器.长度
	结束 方法
	事件 rl组件容器 : 绘制(canvas : 画布)
		变量 组件画笔 : 画笔
		组件画笔.设置颜色(背景色)
		图形.绘制图形(canvas,组件画笔)
		循环(i, 0, 容器.长度)
			取组件(i).数据更新()
			取组件(i).绘制(canvas)
		结束 循环
	结束 事件
结束 类