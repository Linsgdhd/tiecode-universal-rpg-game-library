类 场景
	变量 场景id : 整数
	变量 场景名称 : 文本
	变量 高度 : 整数
	变量 宽度 : 整数
	变量 网格大小 : 整数 = 40
	变量 视图 : 相机?
	变量 数据管理 : 数据管理器
	变量 网格 : 格子[]?
	变量 建筑索引容器 : 文本集合
	变量 建筑实体容器 : 集合
	变量 容器 : 场景实体容器
	变量 abyss : 世界?
	变量 jdata : JSON对象?
	变量 场景画笔 : 画笔
	变量 已完成初始化 : 逻辑型 = 假
	方法 实例化(data : JSON对象,world : 世界,camera : 相机)
		加载进度更新(0)
		数据管理.初始化()
		abyss = world
		jdata = data
		高度 = data.取整数("height")
		宽度 = data.取整数("width")
		场景画笔.设置颜色(0xffff0000)
		场景画笔.设置画笔宽度(8.0f)
		视图 = camera
		加载进度更新(10)
		提交到新线程运行()
		变量 tempcells : 格子[高度*宽度]
		变量 tempjcl : JSON数组 = data.取JSON数组("cells")
		循环(i, 0, 取数组长度(tempcells))
			变量 tempcell : 格子
			tempcell.初始化(tempjcl.取JSON对象(i),本对象)
			tempcells[i] = tempcell
		结束 循环
		网格 = tempcells
		加载进度更新(30)
		变量 tempjel : JSON数组 = data.取JSON数组("entity")
		加载进度更新(60)
		循环(e, 0, tempjel.长度)
			变量 tempentity : 场景实体
			tempentity.初始化(tempjel.取JSON对象(e),本对象)
			建筑索引容器.添加成员(tempentity.row.到文本() +"v"+ tempentity.col.到文本())
			建筑实体容器.添加成员(tempentity)
		结束 循环
		已完成初始化 = 真
		加载进度更新(100)
		结束提交到新线程()
	结束 方法
	方法 绘制(canvas : 画布)
		如果 已完成初始化 则
			循环(i, 0, 取数组长度(网格))
				变量 temp : 格子 = 网格[i]
				如果 视图.可绘制(temp.位置,网格大小,网格大小) 则
					canvas.绘制位图2(temp.背景图片,temp.位置.x - 视图.位置.x,temp.位置.y - 视图.位置.y,场景画笔)
					变量 key : 文本 = temp.row.到文本() +"v"+temp.col.到文本()
					如果 建筑索引容器.是否存在(key) 则
						变量 tems : 场景实体 = 建筑实体容器.取成员(建筑索引容器.寻找成员(key))
						canvas.绘制位图2(tems.取位图(),tems.位置.x - 视图.位置.x,tems.位置.y - 视图.位置.y,场景画笔)
					结束 如果
				结束 如果
			结束 循环
		结束 如果
	结束 方法
	方法 注册坐标(x : 整数,y : 整数,obj : 场景实体)
		
	结束 方法
	方法 添加实体(entity : 场景实体)
	结束 方法
	定义事件 加载完成()
	定义事件 加载进度更新(sum : 整数)
结束 类

类 格子
	变量 容器 : 场景?
	变量 背景图片 : 位图对象?
	变量 背景颜色 : 整数
	变量 虚空 : 逻辑型
	变量 位置 : rl坐标
	变量 row : 整数
	变量 col : 整数
	方法 初始化(data : JSON对象,ic : 场景)
		容器 = ic
		row = data.取整数("y")
		col = data.取整数("x")
		位置.x = data.取整数("x") * 容器.网格大小
		位置.y = data.取整数("y") * 容器.网格大小
		背景图片 = 位图对象.创建缩放位图(ic.数据管理.取位图(data.取文本("img")),ic.网格大小,ic.网格大小,真)
	结束 方法
	@虚拟事件
	方法 初始化补充(data : JSON对象)
	结束 方法
结束 类

类 相机
	变量 高度 : 单精度小数 = 100.0f
	变量 宽度 : 单精度小数 = 100.0f
	变量 位置 : rl坐标
	方法 可绘制(xy : rl坐标,w : 单精度小数,h : 单精度小数) : 逻辑型
		返回 (xy.x <= 位置.x + 宽度 且 xy.x + w >= 位置.x 且 xy.y <= 位置.y + 高度 且 xy.y + h >= 位置.y)
	结束 方法
结束 类

类 场景实体
	变量 容器 : 场景?
	变量 类型 : 整数
	变量 用户数据 : 对象
	变量 位图序列 : 位图容器
	变量 计数 : 计数器
	变量 位置 : rl坐标
	变量 row : 整数
	变量 col : 整数
	方法 取位图() : 位图对象
		计数.tick()
		返回 位图序列.访问()
	结束 方法
	方法 初始化(data : JSON对象,ic : 场景)
		订阅事件()
		容器 = ic
		类型 = data.取整数("type")
		计数.最大计数 = data.取整数("tick")
		row = data.取整数("y")
		col = data.取整数("x")
		位置.x = data.取整数("x") * 容器.网格大小
		位置.y = data.取整数("y") * 容器.网格大小
		变量 tempjil : JSON数组 = data.取JSON数组("imgList")
		循环(i, 0, tempjil.长度)
			位图序列.添加(位图对象.创建缩放位图(ic.数据管理.取位图(tempjil.取文本(i)),ic.网格大小,ic.网格大小,真))
		结束 循环
	结束 方法
	事件 计数 : 触发()
		位图序列.下一张()
	结束 事件
结束 类

类 计数器
	变量 当前计数 : 整数
	变量 最大计数 : 整数 = 20
	方法 tick()
		自增(当前计数)
		如果 当前计数 >= 最大计数 则
			触发()
			当前计数 = 0
		结束 如果
	结束 方法
	定义事件 触发()
结束 类

@静态
类 角色动画类型
	@静态
	常量 站立_向前 : 整数 = 0
	@静态
	常量 站立_向后 : 整数 = 1
	@静态
	常量 站立_左右 : 整数 = 2
	@静态
	常量 移动_向前 : 整数 = 3
	@静态
	常量 移动_向后 : 整数 = 4
	@静态
	常量 移动_左右 : 整数 = 5
	@静态
	常量 跳跃_向前 : 整数 = 6
	@静态
	常量 跳跃_向后 : 整数 = 7
	@静态
	常量 发现 : 整数 = 8
	@静态
	常量 害怕 : 整数 = 9
	@静态
	常量 高兴 : 整数 = 10
	@静态
	常量 疑惑 : 整数 = 11
	@静态
	常量 喜欢 : 整数 = 12
结束 类

类 位图容器
	变量 容器 : 集合
	变量 计数 : 整数
	方法 添加(数据 : 位图对象)
		容器.添加成员(数据)
	结束 方法
	方法 删除(索引 : 整数)
		容器.删除成员(索引)
	结束 方法
	方法 访问() : 位图对象
		变量 temp : 位图对象 = 容器.取成员(计数)
		返回 temp
	结束 方法
	方法 下一张()
		如果 计数 >= 容器.长度 - 1 则
			重置计数器()
		否则
			自增(计数)
		结束 如果
	结束 方法
	方法 重置计数器()
		计数 = 0
	结束 方法
	方法 长度() : 整数
		返回 容器.长度
	结束 方法
结束 类

类 场景实体容器
	变量 坐标集合 : 哈希表
	变量 容器 : 集合
	方法 添加场景实体(值 : 场景实体)
		容器.添加成员(值)
	结束 方法
结束 类

@静态
类 场景实体类型
	@静态
	常量 建筑 : 整数 = 43
	@静态
	常量 天空 : 整数 = 45
	@静态
	常量 角色 : 整数 = 46
结束 类




/*
类 场景
	变量 场景名称 : 文本
	变量 地板列表 : 地板容器
	变量 建筑列表 : 建筑容器
	变量 角色列表 : 场景角色容器
	变量 宽度 : 整数
	变量 高度 : 整数
	变量 相机 : 摄影机
	变量 地板大小 : 整数 = 60
	变量 场景画布 : 画布?
	方法 实例化(value : JSON对象,c : 画布)
		场景名称 = value.取文本("name")
		宽度 = value.取整数("width")
		高度 = value.取整数("height")
		建筑列表.实例化(value.取JSON对象("unit"))
		场景画布 = c
		实例化完成()
	结束 方法
	方法 序列化() : JSON对象
		变量 temp : JSON对象 = "{}"
		temp.置入("name",    场景名称)
		temp.置入("width",   宽度)
		temp.置入("height",  高度)
		temp.置入("unit",    建筑列表.序列化())
		返回 temp
	结束 方法
	方法 绘制()
		变量 地板画笔 : 画笔
		地板画笔.设置颜色(0x00ffff00)
		变量 文本画笔 : 画笔
		文本画笔.设置颜色(0x34ffffff)
		文本画笔.设置文本大小(23)
	结束 方法
	方法 被点击(x : 整数,y : 整数)
		
	结束 方法
	方法 坐标() : rl空间信息
		
	结束 方法
	方法 长度() : 整数
		返回 高度 * 宽度
	结束 方法
	定义事件 取位图(资源id : 整数) : 位图对象
	定义事件 实例化完成()
结束 类

类 摄影机
	变量 倍率 : 单精度小数
	变量 位置 : rl空间信息
	方法 初始化(s : rl空间信息,width : 单精度小数,height : 单精度小数)
		位置 = s
		位置.大小.height = height
		位置.大小.width  = width
	结束 方法
结束 类

类 场景实体
	变量 位置 : rl空间信息
	变量 动画 : 逻辑型
	变量 序列 : 位图容器
	变量 位图 : 文本
	变量 交互 : 逻辑型
	变量 阻碍 : 逻辑型
	变量 穿透 : 逻辑型
	方法 实例化(值 : JSON对象)
		动画 = 值.取逻辑值("isanim")
		如果 动画 则
			序列.实例化(值.取JSON对象("anim"))
		否则
			位图 = 值.取文本("img")
		结束 如果
		交互 = 值.取逻辑值("isinte")
		阻碍 = 值.取逻辑值("ishind")
		穿透 = 值.取逻辑值("ispene")
		附加实例化参数(值)
	结束 方法
	方法 序列化() : JSON对象
		变量 temp : JSON对象 = "{}"
		返回 temp
	结束 方法
	@虚拟事件
	方法 触发交互()
	结束 方法
	@虚拟事件
	方法 附加实例化参数(值 : JSON对象)
	结束 方法
	@虚拟事件
	方法 附加序列化参数(值 : JSON对象) : JSON对象
	结束 方法
结束 类

类 地板 : 场景实体
	变量 虚空 : 逻辑型
结束 类

类 建筑 : 场景实体
	变量 名称 : 文本
	变量 类型 : 整数
	变量 商品 : 集合
	变量 指向 : 文本
结束 类

类 场景角色 : 场景实体
	变量 绑定角色 : 角色?
	方法 移动(x : 整数,y : 整数)
	结束 方法
结束 类

类 商品page
	变量 内容 : 装备
	变量 价格 : 整数
结束 类
*/