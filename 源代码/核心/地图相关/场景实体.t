类 格子
	变量 容器 : 场景?
	变量 背景图片 : 位图对象?
	变量 背景颜色 : 整数
	变量 虚空 : 逻辑型
	变量 位置 : rl坐标
	变量 row : 整数
	变量 col : 整数
	变量 碰撞 : 逻辑型
	方法 初始化(data : JSON对象,ic : 场景)
		容器 = ic
		row = data.取整数("y")
		col = data.取整数("x")
		位置.x = data.取整数("x") * 容器.网格大小
		位置.y = data.取整数("y") * 容器.网格大小
		背景图片 = 位图对象.创建缩放位图(ic.数据管理.取位图(data.取文本("img")),ic.网格大小,ic.网格大小,假)
	结束 方法
	@虚拟事件
	方法 初始化补充(data : JSON对象)
	结束 方法
	方法 被点击() : 格子
		返回 本对象
	结束 方法
结束 类

类 场景实体
	变量 容器 : 场景?
	变量 类型 : 整数
	变量 用户数据 : 对象
	变量 位图序列 : 位图容器
	变量 计数 : 计数器
	变量 位置 : rl坐标
	变量 绘制起点x : 单精度小数 = 0.0f
	变量 绘制起点y : 单精度小数 = 0.0f
	变量 缓冲向量 : rl坐标
	变量 向量 : rl坐标
	变量 速度 : 单精度小数 = 1.0f
	变量 临近x弦 : 单精度小数 = 0.0f
	变量 临近y弦 : 单精度小数 = 0.0f
	方法 取位图() : 位图对象
		变量 temp : 位图对象 = 位图序列.访问()
		绘制起点修正(temp.宽度,temp.高度)
		返回 temp
	结束 方法
	方法 初始化(data : JSON对象,ic : 场景)
		订阅事件()
		容器 = ic
		类型 = data.取整数("type")
		计数.最大计数 = data.取整数("tick")
		位置.x = data.取整数("x") * 容器.网格大小
		位置.y = data.取整数("y") * 容器.网格大小
		变量 tempjil : JSON数组 = data.取JSON数组("imgList")
		调试输出("实体位图初始化...\n" + tempjil.到文本())
		循环(i, 0, tempjil.长度)
			// 调试输出(tempjil[i].到文本())
			// 位图序列.添加(位图对象.创建缩放位图(ic.数据管理.取位图(tempjil.取文本(i)),ic.网格大小,ic.网格大小,真))
			位图序列.添加(ic.数据管理.取位图(tempjil.取文本(i)))
		结束 循环
	结束 方法
	方法 切换位图序列(data : JSON数组)
		位图序列.拒绝访问 = 真
		位图序列.清空()
		变量 tempjil : JSON数组 = data
		循环(i, 0, tempjil.长度)
			位图序列.添加(位图对象.创建缩放位图(容器.数据管理.取位图(tempjil.取文本(i)),容器.网格大小,容器.网格大小,真))
		结束 循环
		位图序列.拒绝访问 = 假
	结束 方法
	事件 计数 : 触发()
		位图序列.下一张()
	结束 事件
	方法 绘制起点修正(width : 整数,height : 整数)
		绘制起点x = (容器.网格大小 - width) / 2 + 位置.x
		绘制起点y = 位置.y + (容器.网格大小 - height)
	结束 方法
	方法 更新数据()
		临近x弦 = 容器.取临近X弦(位置.y)
		临近y弦 = 容器.取临近Y弦(位置.x)
		如果 向量.x == 0.0f 且 向量.y == 0.0f 则
			如果 位置.y - 临近x弦 <= 速度 则
				位置.y = 临近x弦
				缓冲向量.y = 0.0f
			否则
				如果 位置.y > 临近y弦 则
					缓冲向量.y = 速度
				否则
					缓冲向量.y = 0 - 速度
				结束 如果
			结束 如果
			如果 位置.x - 临近y弦 <= 速度 则
				位置.x = 临近y弦
				缓冲向量.x = 0.0f
			否则
				如果 位置.x > 临近x弦 则
					缓冲向量.x = 速度
				否则
					缓冲向量.x = 0 - 速度
				结束 如果
			结束 如果
		否则
			缓冲向量.x = 向量.x
			缓冲向量.y = 向量.y
		结束 如果
		位置 = 位置 + 缓冲向量 * 速度
		
		
		/*
		如果 数学.abs_float(缓冲向量.x) > 数学.abs_float(缓冲向量.y) 则
			如果 数学.abs_float(位置.y - 临近y弦) <= 速度 则
				位置.y = 临近y弦
				位置.x = 位置.x + 缓冲向量.x * 速度
			否则
				如果 数学.abs_float(位置.y - 临近y弦)  >= 0 则
					位置.y = 位置.y + 速度
				否则
					位置.y = 位置.y - 速度
				结束 如果
			结束 如果
		否则
			如果 数学.abs_float(位置.x - 临近x弦) <= 速度 则
				位置.x = 临近x弦
				位置.y = 位置.y + 缓冲向量.y * 速度
			否则
				如果 数学.abs_float(位置.x - 临近x弦)  >= 0 则
					位置.x = 位置.x + 速度
				否则
					位置.x = 位置.x - 速度
				结束 如果
			结束 如果
		结束 如果
		*/
		数据更新完成()
	结束 方法
	定义事件 数据更新完成()
	定义事件 初始化完成()
结束 类