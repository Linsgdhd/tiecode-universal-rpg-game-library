/*
1、共享数据
	指游戏内内置的资源文件
	路径一般固定
	位图资源 、道具文档 、技能文档
2、存档数据 / 设置文档
	随游戏进行产生的文件，不存储资源本身，但具有对资源和资源组合的引用
	以用户存档为根节点
	设置文档与用户存档处于同一目录内
	角色文档 、装备文档 、场景文档
	
	建筑应该被包含在场景内
d1 存档
	角色信息 / 已有角色和未来生成的角色
	世界信息 / 游戏时间 、fate系统数据 、
*/
@附加资源("../../../资源/")
类 数据管理器v2
	变量 路径 : 文本到文本哈希表
	变量 设定 : 配置管理器
	变量 环境 : 安卓环境?
	变量 当前存档 : 文本 = "nav"
	方法 初始化(context : 安卓环境)
		环境 = context
		路径.添加项目(路径定义.根路径,取存储卡路径() + "/CrowRoam/REL")
		路径.添加项目(路径定义.图片路径,路径.取项目(路径定义.根路径) + "/image")
		路径.添加项目(路径定义.角色路径,路径.取项目(路径定义.根路径) + "/role")
		路径.添加项目(路径定义.地图路径,路径.取项目(路径定义.根路径) + "/map")
		路径.添加项目(路径定义.技能路径,路径.取项目(路径定义.根路径) + "/skill")
		路径.添加项目(路径定义.道具路径,路径.取项目(路径定义.根路径) + "/prop")
		路径.添加项目(路径定义.装备路径,路径.取项目(路径定义.根路径) + "/equipment")
		路径.添加项目(路径定义.建筑路径,路径.取项目(路径定义.根路径) + "/unit")
		路径.添加项目(路径定义.存档路径,路径.取项目(路径定义.根路径) + "/save")
		路径.添加项目(路径定义.配置路径,路径.取项目(路径定义.根路径) + "/config.json")
	结束 方法
	方法 取存档列表() : 文本[]
		返回 文件操作.取子目录(路径.取项目(路径定义.存档路径))
	结束 方法
	方法 创建存档(玩家角色名称 : 文本)
		变量 存档路径 : 文本 = 路径.取项目(路径定义.存档路径) + "/" + 玩家角色名称
		变量 存档角色路径 : 文本 = 存档路径 + "/role"
		变量 存档装备路径 : 文本 = 存档路径 + "/equipment"
		变量 存档场景路径 : 文本 = 存档路径 + "/map"
		变量 存档建筑路径 : 文本 = 存档路径 + "/unit"
		变量 默认存档文本 : JSON对象 = [[{
			"存档名称": "nav",
			"游戏时间": {"年":1000,"月":1,"日":1,"时":0,"分":0},
			"场景索引": [],
			"角色索引": [],
			"装备索引": [],
			"游玩时长": 0,
			"命运": {}
		}]]
		默认存档文本["存档名称"] = 玩家角色名称
		写出文本文件(存档路径 + "/saveData.json",默认存档文本.到文本(4))
	结束 方法
	方法 覆盖存档()

	结束 方法
	方法 加载存档(存档名称 : 文本,world : 世界v1d1)
		如果 当前存档 == 存档名称 则
			返回
		否则
			当前存档 = 存档名称
			变量 存档路径 : 文本 = 路径.取项目(路径定义.存档路径) + "/" + 存档名称
			变量 存档索引文件路径 : 文本 = 存档路径 + "/" + "saveData.json"
			如果 文件是否存在(存档索引文件路径) 则
				变量 temp : JSON对象 = 读入文本文件(存档索引文件路径)
				world.实例化(temp)
			否则
				发生异常(警告类型.目标路径非存档或存档已损坏,"")
			结束 如果
		结束 如果
	结束 方法
	方法 修复资源()

	结束 方法
	方法 检查资源是否完整()

	结束 方法
	方法 写出游戏内置资源()

	结束 方法
	方法 取位图资源(资源名称 : 文本) : 位图对象
		变量 文件路径 : 文本 = 路径.取项目(路径定义.图片路径 + "/" + 资源名称)
		如果(取反(路径.是否存在(路径定义.图片路径)))
			变量 temp : 位图对象 = 生成器.错误位图(警告类型.数据管理器未初始化.到文本())
			返回 temp
		否则(文件操作.文件是否存在(文件路径))
			变量 temp : 位图对象 = 文件路径
			返回 temp
		否则
			变量 temp : 位图对象 = 生成器.错误位图(警告类型.资源不存在.到文本())
			返回 temp
		结束 如果
	结束 方法
	方法 取场景文档(场景名称 : 文本)

	结束 方法
	方法 取上次游玩存档() : 文本
		返回 设定.上次游玩
	结束 方法
	定义事件 发生异常(类型 : 整数,异常文本 : 文本)
结束 类

类 配置管理器
	变量 配置文档 : JSON对象 = [[{
		"音乐音量": 50,
		"环境音量": 50,
		"角色音量": 50,
		"全局音量": 50,
		"决策器": true,
		"自动存档": false,
		"调试模式": true,
		"上次游玩": "nav"
	}]]
	属性读 BGM音量() : 整数
		返回 配置文档.取整数("音乐音量")
	结束 属性
	属性写 BGM音量(音量 : 整数)
		配置文档["音乐音量"] = 音量
	结束 属性
	属性读 环境音量() : 整数
	结束 属性
	属性写 环境音量(音量 : 整数)
	结束 属性
	属性读 角色音量() : 整数
	结束 属性
	属性写 角色音量(音量 : 整数)
	结束 属性
	属性读 全局音量() : 整数
	结束 属性
	属性写 全局音量(音量 : 整数)
	结束 属性

	属性读 NPC决策器() : 逻辑型
	结束 属性
	属性写 NPC决策器(启用 : 逻辑型)
	结束 属性
	/*
	属性读 自动存档() : 逻辑型
	结束 属性
	属性写 自动存档(启用 : 逻辑型)
	结束 属性
	*/
	属性读 调试模式() : 逻辑型
	结束 属性
	属性写 调试模式(启用 : 逻辑型)
	结束 属性
	属性读 上次游玩() : 文本
	结束 属性
	属性写 上次游玩(存档名 : 文本)
	结束 属性
结束 类

@附加资源("../../../资源/")
类 数据管理器
	变量 ccq : 文本到文本哈希表
	方法 初始化(存档名称 : 文本 = "new test")
		ccq.添加项目(路径定义.根路径,取存储卡路径() + "/CrowRoam/re/" + 存档名称 + "/")
		ccq.添加项目(路径定义.图片路径,ccq.取项目("根路径") + "image/")
		ccq.添加项目(路径定义.角色路径,ccq.取项目("根路径") + "role/")
		ccq.添加项目(路径定义.地图路径,ccq.取项目("根路径") + "map/")
		ccq.添加项目(路径定义.技能路径,ccq.取项目("根路径") + "skill/")
		ccq.添加项目(路径定义.道具路径,ccq.取项目("根路径") + "prop/")
		ccq.添加项目(路径定义.建筑路径,ccq.取项目("根路径") + "unit/")
		@code
		for (String key : #ccq.keySet()) {
			try {
				java.io.File directory = new java.io.File(#ccq.get(key));
				if (directory.exists() && directory.isDirectory()) {
				} else {
					if (directory.mkdirs()) {
					} else {
						#错误("初始化失败，路径：" + directory.getPath() + "创建失败!");
					}
				}
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		@end
	结束 方法
	方法 取目录路径(目录名 : 文本) : 文本
		返回 ccq.取项目(目录名)
	结束 方法
	定义事件 错误(内容 : 文本)
	方法 取位图(资源名称 : 文本) : 位图对象
		变量 temp : 位图对象 = 取目录路径(路径定义.图片路径) + 资源名称
		返回 temp
	结束 方法
	方法 取可绘制对象(资源名称 : 文本) : 可绘制对象
		变量 temp : 可绘制对象 = 取目录路径(路径定义.图片路径) + 资源名称
		返回 temp
	结束 方法
结束 类

@静态
类 路径定义
	@静态
	常量 根路径 : 文本 = "根路径"
	@静态
	常量 图片路径 : 文本 = "图片资源"
	@静态
	常量 角色路径 : 文本 = "角色资源"
	@静态
	常量 地图路径 : 文本 = "地图资源"
	@静态
	常量 技能路径 : 文本 = "技能资源"
	@静态
	常量 道具路径 : 文本 = "道具资源"
	@静态
	常量 装备路径 : 文本 = "装备资源"
	@静态
	常量 建筑路径 : 文本 = "建筑资源"
	@静态
	常量 存档路径 : 文本 = "存档数据"
	@静态
	常量 配置路径 : 文本 = "配置文档"
结束 类

类 配置文件

结束 类

类 资源包管理器

结束 类