/*
	一个世界等于一个存档
*/
类 世界v1d1 : 可序列化数据类
	变量 时间 : 世界计时
	变量 状态 : 整数
	变量 数据 : 数据管理器v2
	变量 位图缓存 : 位图缓存器
	变量 命运系统 : FateSystem
	变量 终端 : rl命令终端
	变量 数据线程 : 线程
	变量 当前场景 : 场景v1d1
	变量 帧间隔 : 长整数 = 10
	变量 计数器 : 时钟
	
	方法 开始()
		如果 状态 == 世界状态.就绪 则
			如果 数据线程.正在执行 则
				状态 = 世界状态.运行
			否则
				数据线程.启动()
				状态 = 世界状态.运行
			结束 如果
		结束 如果
	结束 方法

	方法 暂停()
		状态 = 世界状态.暂停
	结束 方法

	方法 加载场景()
		
	结束 方法
	
	方法 取位图(资源名称 : 文本) : 位图对象
		如果 位图缓存.是否存在(资源名称) 则
			返回 位图缓存.取位图(资源名称)
		否则
			变量 临时位图 : 位图对象 = 数据.取位图资源(资源名称)
			位图缓存.添加位图(资源名称,临时位图)
			返回 位图缓存.取位图(资源名称)
		结束 如果
	结束 方法
	
	事件 计数器 : 周期事件()
		变量 日志 : 文本 = "周期日志:" + 状态.到文本()
		rl消息.生成rl消息(rl消息类型.日志,本对象,日志)
	结束 事件

	事件 数据线程 : 被启动()
		循环(真)
			假如 状态
				是 世界状态.运行
					更新完毕()
				是 世界状态.暂停
					暂停事件()
					状态 = 世界状态.就绪
				是 世界状态.关闭
					退出循环
			结束 假如
			延时(帧间隔)
		结束 循环
	结束 事件

	事件 数据线程 : 更新主线程(来源消息 : 消息)

	结束 事件
	
	事件 世界v1d1 : 序列化() : JSON对象
		变量 temp : JSON对象 = "{}"
		返回 temp
	结束 事件

	事件 世界v1d1 : 实例化(data : JSON对象, context : 安卓环境)
		时间.实例化(data.取JSON对象("time"))
		数据.初始化(context)
		状态 = 世界状态.就绪
		计数器.时钟周期 = 1000
		订阅事件()
	结束 事件

	定义事件 更新完毕()
	定义事件 暂停事件()
结束 类

类 世界
	变量 角色集合 : 角色容器
	变量 世界时间 : 世界计时
	变量 当前场景 : 场景
	变量 数据 : 数据管理器
	变量 状态 : 整数
	变量 数据帧隔 : 长整数 = 16
	方法 初始化(value : JSON对象)
		订阅事件()
		角色集合.实例化(value.取JSON对象("role"))
		世界时间.实例化(value.取JSON对象("time"))
		提交到新线程运行()
		循环(真)
			如果(状态 == 世界状态.运行)
				数据更新()
			否则(状态 == 世界状态.暂停)
				暂停发生()
				状态 = 世界状态.就绪
			否则(状态 == 世界状态.关闭)
				退出循环
			结束 如果
			延时(数据帧隔)
		结束 循环
		结束提交到新线程()
	结束 方法
	方法 序列化() : JSON对象
		变量 temp : JSON对象 = "{}"
		返回 temp
	结束 方法
	方法 开始()
		状态 = 世界状态.运行
	结束 方法
	方法 继续()
		如果 状态 == 世界状态.就绪 则
			状态 = 世界状态.运行
		结束 如果
	结束 方法
	方法 暂停()
		如果 状态 == 世界状态.运行 则
			状态 = 世界状态.暂停
		结束 如果
	结束 方法
	方法 切换场景()
	结束 方法
	方法 数据更新()
		当前场景.数据更新()
		数据更新完毕(当前场景)
	结束 方法
	定义事件 初始化完成()
	定义事件 场景切换完成()
	定义事件 数据更新完毕(value : 场景)
	定义事件 暂停发生()
结束 类

类 世界计时
	变量 年 : 整数
	变量 月 : 整数
	变量 日 : 整数
	变量 时 : 整数
	变量 分 : 整数
	方法 实例化(文档 : JSON对象 = [[{"年":990,"月":1,"日":1,"时":0,"分":0}]])
		年 = 文档.取整数("年")
		月 = 文档.取整数("月")
		日 = 文档.取整数("日")
		时 = 文档.取整数("是")
	结束 方法
	方法 序列化() : JSON对象
		变量 temp : JSON对象 = "{}"
		temp.置入("年",年)
		temp.置入("月",月)
		temp.置入("日",日)
		temp.置入("时",时)
		temp.置入("分",分)
		返回 temp
	结束 方法
	方法 步进分(min : 整数)
		分 = 分 + min
		修正()
	结束 方法
	方法 步进时(h : 整数)
		时 = 时 + h
		修正()
	结束 方法
	方法 步进日(day : 整数)
		日 = 日 + day
		修正()
	结束 方法
	方法 修正()
		循环(i, 0, 分 % 60)
			自增(时)
		结束 循环
		循环(i, 0, 时 % 24)
			自增(日)
		结束 循环
		循环(i, 0, 日 % 30)
			自增(月)
		结束 循环
		循环(i, 0, 月 % 12)
			自增(年)
		结束 循环
	结束 方法
	方法 取季节() : 整数
		如果(月 > 0 且 月 <= 3)
			返回 0
		否则(月 > 3 且 月 <= 6)
			返回 1
		否则(月 > 6 且 月 <= 9)
			返回 2
		否则(月 > 9 且 月 <= 12)
			返回 3
		结束 如果
	结束 方法
结束 类

类 FateSystem
	变量 容器 : 数值容器[12]
	方法 读取(索引 : 整数) : 数值容器
		如果 索引 < 取数组长度(容器) 则
			返回 容器[索引]
		否则
			预演()
			返回 容器[0]
		结束 如果
	结束 方法
	@隐藏
	方法 预演()
		循环(i, 0, 取数组长度(容器))
			变量 temp : 数值容器 = 容器[i]
			temp.清空()
		结束 循环
	结束 方法
结束 类