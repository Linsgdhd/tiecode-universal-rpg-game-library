类 rl命令终端
	变量 容器 : 集合
	方法 系统输入(信息 : rl消息)
		容器.添加成员(信息)
	结束 方法
	方法 用户输入(内容 : 文本)
		如果 内容[0] == "/" 则
			变量 temp : rl消息 = rl消息.生成rl消息(rl消息类型.指令,本对象,内容)
			用户信息(temp)
			容器.添加成员(temp)
		否则
			变量 temp : rl消息 = rl消息.生成rl消息(rl消息类型.其它,本对象,内容)
			用户信息(temp)
			容器.添加成员(temp)
		结束 如果
	结束 方法
	方法 取指定类型消息(类型 : rl消息类型) : 文本集合
		变量 temp : 文本集合
		循环(i, 0, 容器.长度)
			变量 xx : rl消息 = 容器.取成员(i)
			如果(类型 == rl消息类型.all)
				temp.添加成员(xx.到文本())
			否则(类型 == xx.消息类型)
				temp.添加成员(xx.到文本())
			结束 如果
		结束 循环
	结束 方法
	定义事件 用户信息(信息 : rl消息)
结束 类

类 rl消息
	变量 生成时间 : 文本
	变量 消息类型 : rl消息类型
	变量 消息来源 : 对象
	变量 消息内容 : 文本
	@静态
	方法 生成rl消息(类型 : rl消息类型,来源 : 对象,信息 : 文本) : rl消息
		变量 temp : rl消息
		//												2000/12/12/18/30/00
		temp.生成时间 = 时间操作.时间戳到文本(取当前时间戳(),"yyyy/MM/dd/HH/mm/ss")
		temp.消息类型 = 类型
		temp.消息来源 = 来源
		temp.消息内容 = 信息
		返回 temp
	结束 方法
	方法 到文本() : 文本
		返回  "type:" + 消息类型.到文本() + "	source:" + 消息来源.取类信息().类名 + "\n" + 生成时间  + ":" + 消息内容
	结束 方法
结束 类

@前缀代码("final")
@禁止继承
@常量类型(整数)
@需求值类型(整数)
类 rl消息类型
	@静态
	常量 日志 : rl消息类型 = 0
	@静态
	常量 警告 : rl消息类型 = 1
	@静态
	常量 错误 : rl消息类型 = 2
	@静态
	常量 指令 : rl消息类型 = 3
	@静态
	常量 其它 : rl消息类型 = 4
	@静态
	常量 all : rl消息类型 = 4
结束 类

类 命令与命令行为定义
	
结束 类